rpcap://\DEVICE\NPF_

        uint16_t eaplen;
	size_t   usernamelen;
	size_t   packetlen;
	size_t   passwdlen;
	uint8_t  response[128];

	assert((EAP_Code)request[18] == REQUEST);
	assert((EAP_Type)request[22] == MD5);

	usernamelen = strlen(username);
	passwdlen = strlen(passwd);
	eaplen = htons(22+usernamelen);
	packetlen = 14+4+22+usernamelen; // ethhdr+EAPOL+EAP+usernamelen

	// Fill Ethernet header
	memcpy(response, ethhdr, 14);

	// 802.1X Authentication
	// {
		response[14] = 0x1;	// 802.1X Version 1
		response[15] = 0x0;	// Type=0 (EAP Packet)
		memcpy(response+16, &eaplen, sizeof(eaplen));	// Length

		// Extensible Authentication Protocol
		// {
		response[18] = (EAP_Code) RESPONSE;// Code
		response[19] = request[19];	// ID
		response[20] = response[16];	// Length
		response[21] = response[17];	//
		response[22] = (EAP_Type) MD5;	// Type
		response[23] = 16;		// Value-Size: 16 Bytes


		uint8_t md5[16];
		int jj=0;
		size_t kk=passwdlen;
		int ll=0;

		for(;jj<passwdlen;jj++){
			md5[jj] = passwd[jj];
		}
		for(;kk<16;kk++){
			md5[kk] = 0x00; //MD5 lenth is 16,if password lenth < 16 ,fill 0x0 after it
		}
		uint8_t chap[16];
		for(;ll<16;ll++){
			chap[ll] = md5[ll]^request[24+ll]; //fill MD5 area
		}
		memcpy(response+24, chap, sizeof(chap));
		memcpy(response+40, username, usernamelen);
		// }
	// }

	pcap_sendpacket(handle, response, packetlen);
}